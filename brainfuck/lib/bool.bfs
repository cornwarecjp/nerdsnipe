################################################################################

#y = bool(x)
#stack: 1 byte
bool(x;y;stack)
{
	!
	? y     0()    #y = 0
	? x     [      #while x != 0
	? x     -      #x--
	? stack +      #stack++
	? y     0() +  #y = 1
	? x     ]
	? stack [      #while stack != 0
    ? stack -      #stack--
	? x     +      #x++
	? stack ]
	? ~
}

#z = x or y
#stack: 2 bytes
or(x;y;z;stack)
{
	t(){stack}
	newStack(){stack >}

	bool(x;z;t())          #z = bool(x)
	bool(y;t();newStack()) #t = bool(y)

	!
	#t = bool(z) + bool(y)
	? z   [           #while z
	? z   -           #z--
	? t() +           #t++
	? z   ]

	#z = bool(bool(z) + bool(y))
	? t() [           #while t
	? t() -           #t--
	? z   0() +       #z = 1
	? t() ]
	? ~
}

